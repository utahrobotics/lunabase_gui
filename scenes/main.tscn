[gd_scene load_steps=18 format=2]

[ext_resource path="res://scripts/controllable_node.gd" type="Script" id=1]
[ext_resource path="res://scenes/bot.tscn" type="PackedScene" id=2]
[ext_resource path="res://scripts/pathing_render.gd" type="Script" id=3]
[ext_resource path="res://scenes/position_gizmo.tscn" type="PackedScene" id=4]
[ext_resource path="res://scenes/rotation_gizmo.tscn" type="PackedScene" id=5]

[sub_resource type="GDScript" id=13]
script/source = "extends ItemList


func _on_ActionList_item_activated(index: int):
	match index:
		0:
			BotServer.make_manual()
		1:
			BotServer.initiate_autonomy_machine()		# TODO Improve
		5:
			BotServer.dump_action()
		6:
			BotServer.fake_init()
"

[sub_resource type="GDScript" id=6]
script/source = "extends Button


onready var action_panel: Control = $\"../Control\"
onready var second_panel: Control = $\"../Panel\"


func _ready():
	action_panel.visible = false
	second_panel.visible = false


func _on_Button_pressed():
	action_panel.visible = not action_panel.visible
	second_panel.visible = action_panel.visible
"

[sub_resource type="GDScript" id=14]
script/source = "extends Label


func _ready():
	# warning-ignore:return_value_discarded
	BotServer.connect(\"autonomy_changed\", self, \"_on_autonomy_changed\")


func _on_autonomy_changed():
	if BotServer.get_is_autonomous():
		text = \"autonomous\"
	else:
		text = \"manual\"
"

[sub_resource type="QuadMesh" id=11]
size = Vector2( 100, 10 )
center_offset = Vector3( 50, 0, 0 )

[sub_resource type="GDScript" id=12]
script/source = "extends MeshInstance2D


onready var label: Label = $\"../Panel/Label\"


func _ready():
	# warning-ignore:return_value_discarded
	BotServer.connect(\"arm_angle\", self, \"_on_arm_angle\")
	label.text = \"0°\"


func _on_arm_angle(angle: float):
	rotation = angle
	label.text = str(stepify(rad2deg(angle), 0.1)) + \"°\"
"

[sub_resource type="GDScript" id=3]
script/source = "extends Label


func _ready():
	# warning-ignore:return_value_discarded
	BotServer.connect(\"packet_received\", self, \"_update_delay\")


func _update_delay(delay: int):
	text = str(delay) + \" ms\"
"

[sub_resource type="GDScript" id=4]
script/source = "extends Label


func _on_Camera_camera_lock_changed(val):
	if val:
		text = \"Camera Locked\"
		set(\"custom_colors/font_color\", Color.red)
	else:
		text = \"Camera Unlocked\"
		set(\"custom_colors/font_color\", Color.green)
"

[sub_resource type="GDScript" id=5]
script/source = "extends Button


onready var line_edit: LineEdit = $\"../LineEdit\"


func _on_ManualHome_pressed():
	if not line_edit.text.is_valid_integer(): return
	disabled = true
	BotServer.manual_home(int(line_edit.text))


func _ready():
	# warning-ignore:return_value_discarded
	BotServer.connect(\"manual_home_complete\", self, \"set_disabled\", [false])
"

[sub_resource type="GDScript" id=10]
script/source = "extends Button


onready var label: Label = $\"../Label\"


func _on_Button_pressed():
	if BotServer.get_is_sending_rosout():
		BotServer.dont_send_rosout()
		text = \"Enable Rosout\"
		label.text = \" Not Receiving Rosout\"
	else:
		BotServer.send_rosout()
		text = \"Disable Rosout\"
		label.text = \" Receiving Rosout\"
"

[sub_resource type="GDScript" id=9]
script/source = "extends Label


var count := 0

onready var _console: Control = $\"../../ScrollContainer\"


func _ready():
	# warning-ignore:return_value_discarded
	BotServer.connect(\"rosout\", self, \"_on_rosout\")


func _on_rosout(_level, _msg):
	if _console.visible:
		return
	count += 1
	text = \"(\" + str(count) + \")\"


func reset():
	count = 0
	text = \"(0)\"
"

[sub_resource type="GDScript" id=7]
script/source = "extends Button


onready var count: Control = $\"../Label2\"
onready var console: Control = $\"../../ScrollContainer\"


func _on_Button_pressed():
	if console.visible:
		console.visible = false
		text = \"Show\"
	else:
		count.reset()
		console.visible = true
		text = \"Hide\"
"

[sub_resource type="GDScript" id=8]
script/source = "extends VBoxContainer


# Rosout levels
enum {
	DEBUG = 1,
	INFO = 2,
	WARN = 4,
	ERROR = 8,
	FATAL = 16
}


func _ready():
	# warning-ignore:return_value_discarded
	BotServer.connect(\"rosout\", self, \"_on_rosout\")


func _on_rosout(level: int, msg: String):
	match level:
		DEBUG:
			_add_line(msg, Color.bisque)
		INFO:
			_add_line(msg)
		WARN:
			_add_line(msg, Color.yellow)
		ERROR:
			_add_line(msg, Color.red)
		FATAL:
			_add_line(msg, Color.darkmagenta)


func _add_line(msg: String, color:=Color.white):
	var label := Label.new()
	label.text = msg
	label.modulate = color
	label.align = Label.ALIGN_RIGHT
	label.autowrap = true
	add_child(label)
"

[node name="Spatial" type="Spatial"]

[node name="Line2D" type="Line2D" parent="."]
script = ExtResource( 3 )

[node name="LeftHUD" type="VBoxContainer" parent="."]
anchor_right = 0.5
anchor_bottom = 1.0
margin_left = 7.0
margin_top = 7.0

[node name="CanvasLayer" type="CanvasLayer" parent="LeftHUD"]

[node name="Panel" type="Panel" parent="LeftHUD/CanvasLayer"]
margin_right = 200.0
margin_bottom = 35.0
rect_min_size = Vector2( 0, 35 )

[node name="Control" type="VBoxContainer" parent="LeftHUD/CanvasLayer"]
margin_top = 35.0
margin_right = 200.0
margin_bottom = 100.0
rect_min_size = Vector2( 200, 100 )
size_flags_vertical = 3

[node name="ActionList" type="ItemList" parent="LeftHUD/CanvasLayer/Control"]
margin_right = 200.0
margin_bottom = 135.0
rect_min_size = Vector2( 0, 100 )
size_flags_vertical = 2
items = [ "Make Fully Manual", null, false, "Initiate Autonomy", null, false, "Dig", null, false, "Finish Dig", null, false, "Align to Bin", null, false, "Dump", null, false, "FakeInit", null, false ]
auto_height = true
script = SubResource( 13 )

[node name="Button" type="Button" parent="LeftHUD/CanvasLayer"]
margin_left = 7.0
margin_top = 7.0
margin_right = 93.0
margin_bottom = 27.0
focus_mode = 0
size_flags_horizontal = 0
text = "Bot Actions"
script = SubResource( 6 )

[node name="Control2" type="HBoxContainer" parent="LeftHUD"]
margin_right = 505.0
margin_bottom = 30.0
rect_min_size = Vector2( 0, 30 )

[node name="Control" type="Control" parent="LeftHUD/Control2"]
margin_right = 200.0
margin_bottom = 30.0
rect_min_size = Vector2( 200, 0 )

[node name="Label" type="Label" parent="LeftHUD/Control2"]
margin_left = 204.0
margin_right = 295.0
margin_bottom = 30.0
size_flags_vertical = 3
text = "Current State: "

[node name="Label2" type="Label" parent="LeftHUD/Control2"]
margin_left = 299.0
margin_right = 345.0
margin_bottom = 30.0
size_flags_vertical = 3
text = "Manual"
script = SubResource( 14 )

[node name="ViewportContainer" type="ViewportContainer" parent="LeftHUD"]
margin_top = 34.0
margin_right = 505.0
margin_bottom = 234.0

[node name="Viewport" type="Viewport" parent="LeftHUD/ViewportContainer"]
size = Vector2( 200, 200 )
own_world = true
transparent_bg = true
handle_input_locally = false
render_target_update_mode = 3

[node name="Spatial" type="Spatial" parent="LeftHUD/ViewportContainer/Viewport"]
transform = Transform( -0.34202, -0.719846, 0.604023, 0, 0.642788, 0.766044, -0.939693, 0.262002, -0.219846, 0, 0, 0 )

[node name="Camera" type="Camera" parent="LeftHUD/ViewportContainer/Viewport/Spatial"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0.275 )
projection = 1
size = 0.32

[node name="PositionGizmo" parent="LeftHUD/ViewportContainer/Viewport" instance=ExtResource( 4 )]

[node name="ViewportContainer2" type="ViewportContainer" parent="LeftHUD"]
margin_top = 238.0
margin_right = 505.0
margin_bottom = 438.0

[node name="Viewport" type="Viewport" parent="LeftHUD/ViewportContainer2"]
size = Vector2( 200, 200 )
own_world = true
transparent_bg = true
handle_input_locally = false
render_target_update_mode = 3

[node name="Spatial" type="Spatial" parent="LeftHUD/ViewportContainer2/Viewport"]
transform = Transform( -0.34202, -0.719846, 0.604023, 0, 0.642788, 0.766044, -0.939693, 0.262002, -0.219846, 0, 0, 0 )

[node name="Camera" type="Camera" parent="LeftHUD/ViewportContainer2/Viewport/Spatial"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0.275 )
projection = 1
size = 0.32

[node name="RotationGizmo" parent="LeftHUD/ViewportContainer2/Viewport" instance=ExtResource( 5 )]

[node name="Control" type="Control" parent="LeftHUD"]
margin_top = 442.0
margin_right = 505.0
margin_bottom = 442.0

[node name="Flat" type="MeshInstance2D" parent="LeftHUD/Control"]
position = Vector2( 48, 73 )
mesh = SubResource( 11 )

[node name="Arm" type="MeshInstance2D" parent="LeftHUD/Control"]
position = Vector2( 48, 73 )
mesh = SubResource( 11 )
script = SubResource( 12 )

[node name="Panel" type="Panel" parent="LeftHUD/Control"]
margin_left = -1.0
margin_top = 66.0
margin_right = 39.0
margin_bottom = 80.0

[node name="Label" type="Label" parent="LeftHUD/Control/Panel"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_bottom = 14.0

[node name="RightHUD" type="VBoxContainer" parent="."]
anchor_left = 0.5
anchor_right = 1.0
anchor_bottom = 1.0
margin_top = 7.0
margin_right = -7.0
margin_bottom = -7.0

[node name="PacketDelay" type="VBoxContainer" parent="RightHUD"]
margin_right = 505.0
margin_bottom = 32.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label" type="Label" parent="RightHUD/PacketDelay"]
margin_right = 505.0
margin_bottom = 14.0
text = "Last Packet Delay:"
align = 2

[node name="HBoxContainer" type="HBoxContainer" parent="RightHUD/PacketDelay"]
margin_top = 18.0
margin_right = 505.0
margin_bottom = 32.0
alignment = 2

[node name="Label2" type="Label" parent="RightHUD/PacketDelay/HBoxContainer"]
margin_left = 473.0
margin_right = 505.0
margin_bottom = 14.0
text = "0 ms"
script = SubResource( 3 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Panel" type="Panel" parent="RightHUD/PacketDelay/HBoxContainer/Label2"]
show_behind_parent = true
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="CameraLock" type="Label" parent="RightHUD"]
margin_top = 36.0
margin_right = 505.0
margin_bottom = 50.0
custom_colors/font_color = Color( 1, 0, 0, 1 )
text = "Camera Locked"
align = 2
script = SubResource( 4 )

[node name="Control" type="Control" parent="RightHUD"]
margin_top = 54.0
margin_right = 505.0
margin_bottom = 84.0
rect_min_size = Vector2( 0, 30 )

[node name="HBoxContainer" type="HBoxContainer" parent="RightHUD"]
margin_top = 88.0
margin_right = 505.0
margin_bottom = 112.0
alignment = 2

[node name="ManualHome" type="Button" parent="RightHUD/HBoxContainer"]
margin_left = 342.0
margin_right = 443.0
margin_bottom = 24.0
focus_mode = 0
size_flags_horizontal = 8
text = "Manual Home"
script = SubResource( 5 )

[node name="LineEdit" type="LineEdit" parent="RightHUD/HBoxContainer"]
margin_left = 447.0
margin_right = 505.0
margin_bottom = 24.0
align = 2
max_length = 1

[node name="Control2" type="Control" parent="RightHUD"]
margin_top = 116.0
margin_right = 505.0
margin_bottom = 136.0
rect_min_size = Vector2( 0, 20 )

[node name="HBoxContainer2" type="HBoxContainer" parent="RightHUD"]
margin_top = 140.0
margin_right = 505.0
margin_bottom = 160.0
alignment = 2

[node name="Button" type="Button" parent="RightHUD/HBoxContainer2"]
margin_left = 280.0
margin_right = 388.0
margin_bottom = 20.0
text = "Disable Rosout"
script = SubResource( 10 )

[node name="Label" type="Label" parent="RightHUD/HBoxContainer2"]
margin_left = 392.0
margin_top = 3.0
margin_right = 505.0
margin_bottom = 17.0
text = " Receiving Rosout"

[node name="VBoxContainer" type="VBoxContainer" parent="RightHUD"]
margin_left = 155.0
margin_top = 164.0
margin_right = 505.0
margin_bottom = 586.0
rect_min_size = Vector2( 350, 0 )
size_flags_horizontal = 8
size_flags_vertical = 3

[node name="HBoxContainer" type="HBoxContainer" parent="RightHUD/VBoxContainer"]
margin_right = 350.0
margin_bottom = 20.0
alignment = 2

[node name="Label" type="Label" parent="RightHUD/VBoxContainer/HBoxContainer"]
margin_left = 177.0
margin_top = 3.0
margin_right = 276.0
margin_bottom = 17.0
text = "Rosout Console"

[node name="Label2" type="Label" parent="RightHUD/VBoxContainer/HBoxContainer"]
margin_left = 280.0
margin_top = 3.0
margin_right = 296.0
margin_bottom = 17.0
text = "(0)"
script = SubResource( 9 )

[node name="Button" type="Button" parent="RightHUD/VBoxContainer/HBoxContainer"]
margin_left = 300.0
margin_right = 350.0
margin_bottom = 20.0
rect_min_size = Vector2( 50, 0 )
focus_mode = 0
text = "Show"
script = SubResource( 7 )

[node name="ScrollContainer" type="ScrollContainer" parent="RightHUD/VBoxContainer"]
visible = false
margin_top = 24.0
margin_right = 350.0
margin_bottom = 422.0
size_flags_vertical = 3

[node name="PanelContainer" type="PanelContainer" parent="RightHUD/VBoxContainer/ScrollContainer"]
margin_right = 350.0
margin_bottom = 398.0
size_flags_horizontal = 3
size_flags_vertical = 3

[node name="VBoxContainer" type="VBoxContainer" parent="RightHUD/VBoxContainer/ScrollContainer/PanelContainer"]
margin_left = 7.0
margin_top = 7.0
margin_right = 343.0
margin_bottom = 391.0
size_flags_horizontal = 3
size_flags_vertical = 3
script = SubResource( 8 )

[node name="Box" type="Spatial" parent="."]

[node name="Bot" parent="Box" instance=ExtResource( 2 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, -0.320545 )

[node name="Box" type="CSGBox" parent="Box"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.5, -3.4 )
invert_faces = true
width = 2.5
height = 1.0
depth = 6.8

[node name="Camera" type="Camera" parent="."]
transform = Transform( -0.34202, -0.719846, 0.604023, 0, 0.642788, 0.766044, -0.939693, 0.262003, -0.219846, 3, 4, -4.8 )
script = ExtResource( 1 )
max_major_rotation_degrees = 0.0
offload_excess_major_rotation = false

[node name="RemoteTransform" type="RemoteTransform" parent="Camera"]
remote_path = NodePath("../../LeftHUD/ViewportContainer/Viewport/Spatial")
update_position = false
update_scale = false

[node name="RemoteTransform2" type="RemoteTransform" parent="Camera"]
remote_path = NodePath("../../LeftHUD/ViewportContainer2/Viewport/Spatial")
update_position = false
update_scale = false

[node name="DirectionalLight" type="DirectionalLight" parent="."]
transform = Transform( 0.45809, -0.504121, 0.732131, -0.847733, -4.84499e-08, 0.530422, -0.267397, -0.863633, -0.42736, 0.279014, 2.4613, 0 )
light_energy = 0.3
directional_shadow_mode = 1

[connection signal="item_activated" from="LeftHUD/CanvasLayer/Control/ActionList" to="LeftHUD/CanvasLayer/Control/ActionList" method="_on_ActionList_item_activated"]
[connection signal="pressed" from="LeftHUD/CanvasLayer/Button" to="LeftHUD/CanvasLayer/Button" method="_on_Button_pressed"]
[connection signal="pressed" from="RightHUD/HBoxContainer/ManualHome" to="RightHUD/HBoxContainer/ManualHome" method="_on_ManualHome_pressed"]
[connection signal="pressed" from="RightHUD/HBoxContainer2/Button" to="RightHUD/HBoxContainer2/Button" method="_on_Button_pressed"]
[connection signal="pressed" from="RightHUD/VBoxContainer/HBoxContainer/Button" to="RightHUD/VBoxContainer/HBoxContainer/Button" method="_on_Button_pressed"]
[connection signal="camera_lock_changed" from="Camera" to="RightHUD/CameraLock" method="_on_Camera_camera_lock_changed"]
